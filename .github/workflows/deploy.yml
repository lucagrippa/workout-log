name: Deploy to Vercel
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  # Run this workflow whenever a new commit is pushed to main.
  push: {branches: [main]}
  # Run this workflow once per day, at 10:15 UTC
  schedule: [{cron: "15 10 * * *"}]
  # Run this workflow when triggered manually in GitHubâ€™s UI.
  workflow_dispatch: {}

jobs:
  check-submodule:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.submodule_changes.outputs.CHANGES }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update submodules
        run: git submodule update --remote

      - name: Check for submodule changes
        id: submodule_changes
        run: |
          if output=$(git submodule foreach 'git diff-index --quiet HEAD --'); then
            echo "No submodule changes detected."
            echo "Command output: $output"
            echo "{CHANGES}={false}" >> $GITHUB_OUTPUT
          else
            echo "Submodule changes detected."
            echo "Command output: $output"
            echo "{CHANGES}={true}" >> $GITHUB_OUTPUT
          fi


  deploy:
    needs: check-submodule
    runs-on: ubuntu-latest
    if: ${{ needs.check-submodule.outputs.changes == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update submodules
        run: git submodule update --remote

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fitdown

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Disable Observable Telemetry
        run: OBSERVABLE_TELEMETRY_DISABLE=true

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
